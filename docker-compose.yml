version: '3'
services:

  postgres:
    image: postgres:13
    container_name: postgres_db
    env_file: .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - backend

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
    env_file: .env
    ports:
      - "9200:9200"
    networks:
      - backend

  logstash:
    build:
      context: .
      dockerfile: Dockerfile-logstash
    container_name: logstash
    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    ports:
      - "5044:5044"
    networks:
      - backend
    depends_on:
      - elasticsearch

  kibana:
    image: docker.elastic.co/kibana/kibana:7.10.0
    container_name: kibana
    env_file: .env
    ports:
      - "5601:5601"
    networks:
      - backend
    depends_on:
      - elasticsearch

  web:
    build:
      context: .
      dockerfile: Dockerfile-django
    container_name: django-app
    ports:
      - "8000:8000"
    networks:
      - backend
    volumes:
      - .:/app
    env_file: .env
    command: >
        sh -c "cd djelk &&
          python manage.py migrate &&
          gunicorn --bind 0.0.0.0:8000 djelk.wsgi:application"
    depends_on:
      - postgres
      - elasticsearch
      - logstash
      - kibana


networks:
  backend:
    driver: bridge

volumes:
  postgres_data:
